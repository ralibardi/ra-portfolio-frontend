name: Pull Request Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  SONAR_ORGANISATION: ${{ secrets.SONAR_ORGANISATION }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  TOKEN_SONAR: ${{ secrets.TOKEN_SONAR }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.3

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install Packages
        run: pnpm install

      - name: Build
        run: |
          pnpm run build
          pnpm run lint
        env:
          NODE_ENV: 'production'

      - name: Test
        run: pnpm run test:coverage
        env:
          NODE_ENV: 'development'

      - name: Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ env.CHROMATIC_PROJECT_TOKEN }}

      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./coverage

  sonarcloud:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: coverage
          path: ./coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ env.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ env.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=${{ env.SONAR_PROJECT_NAME }}

      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ env.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.qualitygate.wait=true
