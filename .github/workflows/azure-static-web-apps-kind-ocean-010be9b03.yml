name: Build Frontend Artifacts

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]
  workflow_run:
    workflows: ["Deploy Infrastructure"]
    types:
      - completed
    repository: "ralibardi/ra-portfolio-infra"

env:
  PNPM_VERSION: ${{ secrets.PNPM_VERSION }}
  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_ORGANISATION: ${{ secrets.SONAR_ORGANISATION }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}
  PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
  API_URL: ${{ secrets.API_URL }}

jobs:
# Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{PNPM_VERSION}}

      - name: Install dependencies
        run: pnpm install

      - name: Build React app with Vite
        run: pnpm run build

  # Lint and Test Job
  lint_and_test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{PNPM_VERSION}}

      - name: Install dependencies
        run: pnpm install

      - name: Run lint checks (ESLint)
        run: pnpm run lint

      - name: Run unit tests
        run: pnpm run test

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/**/*.json

  # SonarCloud Analysis
  sonarcloud:
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          organization: ${{SONAR_ORGANISATION}}
          projectKey: ${{SONAR_PROJECT_KEY}}
          projectName: ${{SONAR_PROJECT_NAME}}

      - name: Run SonarCloud analysis
        run: |
          pnpm install
          pnpm run build
          sonar-scanner

  # Chromatic Visual Testing
  chromatic:
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.x

      - name: Install dependencies
        run: pnpm install

      - name: Run Chromatic visual tests
        env:
          CHROMATIC_PROJECT_TOKEN: ${{CHROMATIC_PROJECT_TOKEN}}
        run: pnpm run chromatic

  # Deploy Job
  deploy:
    runs-on: ubuntu-latest
    needs: [sonarcloud, chromatic]
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.x

      - name: Install dependencies
        run: pnpm install

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v0.3
        with:
          app_location: "/"
          api_location: "api"
          output_location: "dist"
          azure_static_web_apps_api_token: ${{AZURE_STATIC_WEB_APPS_API_TOKEN}}
